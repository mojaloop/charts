## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""
  # This can be overridden by defining the kafka element.
  kafka:
    host: kafka
    port: 9092
  # This can be overridden by defining the adminApiSvc element.
  adminApiSvc: {}
    # host: admin-api-svc
    # port: 80

podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `main.affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Node affinity preset
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##

nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `main.affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match. Ignored if `main.affinity` is set
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `main.affinity` is set
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param affinity Affinity for %%MAIN_CONTAINER_NAME%% pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## NOTE: `podAffinityPreset`, `main.podAntiAffinityPreset`, and `main.nodeAffinityPreset` will be ignored when it's set
##

## Pod scheduling preferences.
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

## Set toleration for scheduler
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enabled %%MAIN_CONTAINER_NAME%% pods' Security Context
## @param podSecurityContext.fsGroup Set %%MAIN_CONTAINER_NAME%% pod's Security Context fsGroup
##
podSecurityContext:
  enabled: true
  fsGroup: 1001
## Configure Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param containerSecurityContext.enabled Enabled %%MAIN_CONTAINER_NAME%% containers' Security Context
## @param containerSecurityContext.runAsUser Set %%MAIN_CONTAINER_NAME%% containers' Security Context runAsUser
##
containerSecurityContext:
  enabled: true
  runAsUser: 1001

image:
  registry: docker.io
  repository: mojaloop/ml-api-adapter
  tag: v11.1.6
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  ## Enable debug mode
  ##
  debug: false

replicaCount: 1
command: 
  - node
  - src/api/index.js

## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command: 
    - node
    - src/api/index.js
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - --inspect=0.0.0.0:{{ .Values.diagnosticMode.debug.port }}
  
  ## @param diagnosticMode.debug config to override all debug information
  ##
  debug:
    internalPort: 9229
    port: 9229

## @param initContainers Add additional init containers to the %%MAIN_CONTAINER_NAME%% pod(s)
## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
## e.g:
## initContainers:
##  - name: your-image-name
##    image: your-image
##    imagePullPolicy: Always
##    command: ['sh', '-c', 'echo "hello world"']
##
# initContainers: []
initContainers:
  - name: wait-for-kafka
    image: solsson/kafka
    imagePullPolicy: IfNotPresent
    command:
      - sh
      - -c
      - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT}; 
        do
          echo --------------------;
          echo Waiting for Kafka...;
          sleep 2; 
        done;
        echo ====================; 
        echo Kafka ok!;
    env:
      - name: KAFKA_HOST
        value: '{{ include "common.backends.centralbroker.host" . }}'
      - name: KAFKA_PORT
        value: '{{ include "common.backends.centralbroker.port" . }}'

readinessProbe:
  enabled: true
  httpGet:
    path: /health
  initialDelaySeconds: 15
  periodSeconds: 15
livenessProbe:
  enabled: true
  httpGet:
    path: /health
  initialDelaySeconds: 15
  periodSeconds: 15

## metric configuration for prometheus instrumentation
metrics:
  ## flag to enable/disable the metrics end-points
  enabled: true
  config:
    timeout: 5000
    prefix: moja_
    defaultLabels:
      serviceName: ml-service

kafka: {}
  ## This is the same as setting the host explicitly, i.e. will set the host as set below. It is included to support importing Kafka charts as a dependency.
  # fullnameOverride: kafka
  ## This will override the name of kafka and add the release prefix, e.g. '<RELEASE_NAME>-<nameOverride>'.
  # nameOverride: kafka
  # host: kafka
  # port: 9092

adminApiSvc: {}
  ## This is the same as setting the host explicitly, i.e. will set the host as set below. It is included to support importing Kafka charts as a dependency.
  # fullnameOverride: admin-api-svc
  ## This will override the name of kafka and add the release prefix, e.g. '<RELEASE_NAME>-<nameOverride>'.
  # nameOverride: admin-api-svc
  # host: admin-api-svc
  # port: 80

config:
  # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
  # kafka:
  #   host: ''
  #   port: 9092
  #   partitioner: murmur2_random
    # secretName: ''
  admin-api:
    host: ''
    port: 80
  # kafka_host: '$release_name-kafka'
  # kafka_port: 9092
  kafka_partitioner: murmur2_random
  central_services_host: '$release_name-centralledger-service'
  central_services_port: 80
  security:
    callback:
      rejectUnauthorized: true
  max_callback_time_lag_dilation_milliseconds: 100
  max_fulfil_timeout_duration_seconds: 240

  ## Log Configuration
  log_level: info
  log_filter: 'error, warn, info'
  log_transport: file

  ## Health Check endpoint
  central_services_health_endpoint_param: '/health'

  ## Tracing Configuration
  event_trace_vendor: mojaloop
  event_trace_state_enabled: true
  event_log_filter: 'audit:*, log:warn, log:error'
  # If set to true, only the metadata object from the event will be printed.
  event_log_metadata_only: false
  # A comma-separated list of events that should return immediately instead of waiting for the event promises to resolve
  # Any combination of: `log,audit,trace`
  event_async_override: 'log,trace'
  event_traceid_per_vendor: false

  ## Error handling Configuration
  error_handling:
    include_cause_extension: false
    truncate_extensions: true
  resource_versions: 'transfers=1.1,participants=1.1,quotes=1.0'

service:
  internalPort: 3000
  ## @param service.type %%MAIN_CONTAINER_NAME%% service type
  ##
  type: ClusterIP
  ## @param service.port %%MAIN_CONTAINER_NAME%% service HTTP port
  ##
  port: 80
  ## @param service.httpsPort %%MAIN_CONTAINER_NAME%% service HTTPS port
  ##
  httpsPort: 443
  ## Node ports to expose
  ## @param service.nodePorts.http Node port for HTTP
  ## @param service.nodePorts.https Node port for HTTPS
  ## NOTE: choose port between <30000-32767>
  ##
  nodePorts:
    http:
    https:
  ## @param service.clusterIP %%MAIN_CONTAINER_NAME%% service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP:
  ## @param service.loadBalancerIP %%MAIN_CONTAINER_NAME%% service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP:
  ## @param service.loadBalancerSourceRanges %%MAIN_CONTAINER_NAME%% service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param service.externalTrafficPolicy %%MAIN_CONTAINER_NAME%% service external traffic policy
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.annotations Additional custom annotations for %%MAIN_CONTAINER_NAME%% service
  ##
  annotations: {}

ingress:
  ## @param ingress.enabled Enable ingress record generation for %%MAIN_CONTAINER_NAME%%
  ##
  enabled: true
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion:
  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: transfer-api-svc.local
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /
  ## @param ingress.annotations Additional custom annotations for the ingress record
  ## NOTE: If `ingress.certManager=true`, annotation `kubernetes.io/tls-acme: "true"` will automatically be added
  ##
  annotations: {}
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Relay on cert-manager to create it by setting `ingress.certManager=true`
  ##   - Relay on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false
  ## @param ingress.certManager Add the corresponding annotations for cert-manager integration
  ##
  certManager: false
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false
  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: transfer-api-svc.local
  ##     path: /
  ##
  extraHosts: []
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - transfer-api-svc.local
  ##   secretName: transfer-api-svc.local-tls
  ##
  extraTls: []
  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## secrets:
  ##   - name: transfer-api-svc.local-tls
  ##     key: |-
  ##       -----BEGIN RSA PRIVATE KEY-----
  ##       ...
  ##       -----END RSA PRIVATE KEY-----
  ##     certificate: |-
  ##       -----BEGIN CERTIFICATE-----
  ##       ...
  ##       -----END CERTIFICATE-----
  ##
  secrets: []
  className: "nginx"

podAnnotations: {}

## RBAC configuration
##
rbac:
  ## @param rbac.create Specifies whether RBAC resources should be created
  ##
  create: false

## ServiceAccount configuration
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""

configFiles:
  default.json: |
    {
        "PORT": {{ .Values.service.internalPort }},
        "ENDPOINT_SOURCE_URL": {{ printf "http://%s:%s" (include "common.backends.mojaloop.adminApiSvc.host" .) (include "common.backends.mojaloop.adminApiSvc.port" .) | quote}},
        "ENDPOINT_HEALTH_URL": {{ printf "http://%s:%s%s" (include "common.backends.mojaloop.adminApiSvc.host" .) (include "common.backends.mojaloop.adminApiSvc.port" .) .Values.config.central_services_health_endpoint_param | quote}},
        "ENDPOINT_CACHE_CONFIG": {
            "expiresIn": 180000,
            "generateTimeout": 30000
        },
        "ENDPOINT_SECURITY":{
            "JWS": {
                "JWS_SIGN": false,
                "FSPIOP_SOURCE_TO_SIGN": "switch",
                "JWS_SIGNING_KEY_PATH": "secrets/jwsSigningKey.key"
              },
            "TLS": {
                "rejectUnauthorized": {{ .Values.config.security.callback.rejectUnauthorized }}
            }
        },
        "HOSTNAME": "{{ .Values.ingress.hostname }}",
        "MAX_CALLBACK_TIME_LAG_DILATION_MILLISECONDS": {{ .Values.config.max_callback_time_lag_dilation_milliseconds }},
        "MAX_FULFIL_TIMEOUT_DURATION_SECONDS": {{ .Values.config.max_fulfil_timeout_duration_seconds }},
        "TRANSFERS": {
            "SEND_TRANSFER_CONFIRMATION_TO_PAYEE": false
        },
        "AMOUNT": {
            "PRECISION": 18,
            "SCALE": 4
        },
        "ERROR_HANDLING": {
            "includeCauseExtension": {{ .Values.config.error_handling.include_cause_extension }},
            "truncateExtensions": {{ .Values.config.error_handling.truncate_extensions }}
        },
        "HANDLERS": {
            "DISABLED": true,
            "API": {
                "DISABLED": false
            }
        },
        "INSTRUMENTATION": {
            "METRICS": {
                "DISABLED": {{ not .Values.metrics.enabled }},
                "config": {
                    "timeout": {{ .Values.metrics.config.timeout }},
                    "prefix": {{ .Values.metrics.config.prefix | quote }},
                    "defaultLabels": {
                    {{- range $key, $value := .Values.metrics.config.defaultLabels }}
                        {{ $key  | quote }}: {{ $value | quote }}
                    {{- end }}
                    }
                }
            }
        },
        "KAFKA": {
            "TOPIC_TEMPLATES": {
                "GENERAL_TOPIC_TEMPLATE": {
                    "TEMPLATE": "topic-{{"{{"}}functionality{{"}}"}}-{{"{{"}}action{{"}}"}}",
                    "REGEX": "topic-(.*)-(.*)"
                },
                "PARTICIPANT_TOPIC_TEMPLATE": {
                    "TEMPLATE": "topic-{{"{{"}}participantName{{"}}"}}-{{"{{"}}functionality{{"}}"}}-{{"{{"}}action{{"}}"}}",
                    "REGEX": "topic-(.*)-(.*)-(.*)"
                },
                "NOTIFICATION_TOPIC_TEMPLATE": {
                    "TEMPLATE": "topic-notification-event",
                    "REGEX": "topic-notification-event"
                },
                "FULFIL_TOPIC_TEMPLATE": {
                    "TEMPLATE": "topic-transfer-fulfil",
                    "REGEX": "topic-transfer-fulfil"
                },
                "GET_TRANSFERS_TOPIC_TEMPLATE": {
                    "TEMPLATE": "topic-transfer-get",
                    "REGEX": "topic-transfer-get"
                }
            },
            "CONSUMER": {
                "NOTIFICATION": {
                    "EVENT": {
                        "config": {
                            "options": {
                                "mode": 2,
                                "batchSize": 1,
                                "recursiveTimeout": 100,
                                "messageCharset": "utf8",
                                "messageAsJSON": true,
                                "sync": true,
                                "consumeTimeout": 1000
                            },
                            "rdkafkaConf": {
                                "metadata.broker.list": {{ printf "%s:%s" (include "common.backends.centralbroker.host" .) (include "common.backends.centralbroker.port" .) | quote}},
                                "client.id": "ml-con-notification-event",
                                "group.id": "ml-group-notification-event",
                                "socket.keepalive.enable": true,
                                "allow.auto.create.topics": true
                            },
                            "topicConf": {
                                "auto.offset.reset": "earliest"
                            }
                        }
                    }
                }
            },
            "PRODUCER": {
                "TRANSFER": {
                    "PREPARE": {
                        "config": {
                            "options": {
                                "messageCharset": "utf8"
                            },
                            "rdkafkaConf": {
                                "metadata.broker.list": {{ printf "%s:%s" (include "common.backends.centralbroker.host" .) (include "common.backends.centralbroker.port" .) | quote}},
                                "client.id": "ml-prod-transfer-prepare",
                                "event_cb": true,
                                "dr_cb": false,
                                "socket.keepalive.enable": true,
                                "queue.buffering.max.messages": 10000000
                            },
                            "topicConf": {
                                "request.required.acks": "all",
                                "partitioner": "{{ .Values.config.kafka_partitioner }}"
                            }
                        }
                    },
                    "FULFIL": {
                        "config": {
                            "options": {
                                "messageCharset": "utf8"
                            },
                            "rdkafkaConf": {
                                "metadata.broker.list": {{ printf "%s:%s" (include "common.backends.centralbroker.host" .) (include "common.backends.centralbroker.port" .) | quote}},
                                "client.id": "ml-prod-transfer-fulfil",
                                "event_cb": true,
                                "dr_cb": false,
                                "socket.keepalive.enable": true,
                                "queue.buffering.max.messages": 10000000
                            },
                            "topicConf": {
                                "request.required.acks": "all",
                                "partitioner": "{{ .Values.config.kafka_partitioner }}"
                            }
                        }
                    },
                    "GET": {
                        "config": {
                            "options": {
                                "messageCharset": "utf8"
                            },
                            "rdkafkaConf": {
                                "metadata.broker.list": {{ printf "%s:%s" (include "common.backends.centralbroker.host" .) (include "common.backends.centralbroker.port" .) | quote}},
                                "client.id": "ml-prod-transfer-get",
                                "event_cb": true,
                                "dr_cb": false,
                                "socket.keepalive.enable": true,
                                "queue.buffering.max.messages": 10000000
                            },
                            "topicConf": {
                                "request.required.acks": "all",
                                "partitioner": "{{ .Values.config.kafka_partitioner }}"
                            }
                        }
                    }
                }
            }
        }
    }


sidecar:
  enabled: true
  image:
    repository: mojaloop/event-sidecar
    tag: v11.0.1
    pullPolicy: IfNotPresent
    command: 
      - npm
      - run
      - start
  service:
    name: api
    port: 4001
    internalPort: 4001
  readinessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 120
    periodSeconds: 15
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 90
    periodSeconds: 15
  config:
    kafka_partitioner: murmur2_random
    event_log_grpc_host: localhost
    event_log_grpc_port: 50051
    event_log_filter: 'audit:*, log:info, log:warn, log:error'
    event_log_metadata_only: true
    log_level: info
    log_filter: 'error, warn, info'

  configFiles:
    default.json: |
      {
        "PORT": {{ .Values.sidecar.service.internalPort }},
        "EVENT_LOGGER_GRPC_HOST": "{{ .Values.sidecar.config.event_log_grpc_host }}",
        "EVENT_LOGGER_GRPC_PORT": {{ .Values.sidecar.config.event_log_grpc_port }},
        "INSTRUMENTATION": {
          "METRICS": {
            "DISABLED": false,
            "labels": {
              "eventId": "*"
            },
            "config": {
              "timeout": 5000,
              "prefix": "moja_",
              "defaultLabels": {
                "serviceName": "{{ template "common.names.name" . }}-event-sidecar"
              }
            }
          }
        },
        "KAFKA": {
          "TOPIC_TEMPLATES": {
            "GENERAL_TOPIC_TEMPLATE": {
              "TEMPLATE": "topic-{{"{{"}}functionality{{"}}"}}",
              "REGEX": "topic-(.*)"
            }
          },
          "PRODUCER": {
            "EVENT": {
              "config": {
                "options": {
                  "messageCharset": "utf8"
                },
                "rdkafkaConf": {
                  "metadata.broker.list": {{ printf "%s:%s" (include "common.backends.centralbroker.host" .) (include "common.backends.centralbroker.port" .) | quote}},
                  "client.id": "es-prod-event",
                  "event_cb": true,
                  "dr_cb": true,
                  "socket.keepalive.enable": true,
                  "queue.buffering.max.messages": 10000000
                },
                "topicConf": {
                  "request.required.acks": "all",
                  "partitioner": "{{ .Values.sidecar.config.kafka_partitioner }}"
                }
              }
            }
          }
        }
      }
